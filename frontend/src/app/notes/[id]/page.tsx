import { getNote } from "@/actions/actions";
import { AlertCircle } from "lucide-react";
import Notes from "@/components/Notes";
import { Metadata } from "next";

type Props = {
    params: Promise<{ id: string }>; // ‚úÖ ƒê·ªïi th√†nh Promise
};

// üëâ Metadata ƒë·ªông cho Facebook, Zalo, Messenger
export async function generateMetadata({ params }: Props): Promise<Metadata> {
    const { id } = await params; // ‚úÖ Await params tr∆∞·ªõc khi s·ª≠ d·ª•ng
    const note = await getNote(id);

    if (!note || note.error) {
        return {
            title: "Kh√¥ng t√¨m th·∫•y ghi ch√∫ | MoMoLo",
            description: "Ghi ch√∫ b·∫°n t√¨m kh√¥ng t·ªìn t·∫°i.",
        };
    }

    return {
        title: `${note.title || "Ghi ch√∫"} | MoMoLo`,
        description: note.content?.slice(0, 150),
        openGraph: {
            title: `${note.title || "Ghi ch√∫"} | MoMoLo`,
            description: note.content?.slice(0, 150),
            url: `https://momolo.io.vn/notes/${id}`, // ‚úÖ S·ª≠ d·ª•ng id ƒë√£ ƒë∆∞·ª£c await
            siteName: "MoMoLo",
            type: "article",
            images: [
                {
                    url:
                        note.thumbnail || "https://momolo.io.vn/og-default.png",
                },
            ],
        },
    };
}

export default async function NotesPage({ params }: Props) {
    const { id } = await params; // ‚úÖ Await params tr∆∞·ªõc khi s·ª≠ d·ª•ng

    try {
        const data = await getNote(id);

        if (data.error) {
            return (
                <div className="flex flex-col items-center justify-center h-96 text-center">
                    <AlertCircle className="w-12 h-12 text-red-500 mb-4" />
                    <h2 className="text-2xl font-semibold mb-2">
                        Kh√¥ng t√¨m th·∫•y ghi ch√∫
                    </h2>
                    <p className="text-gray-600">
                        Ghi ch√∫ b·∫°n ƒëang t√¨m ki·∫øm c√≥ th·ªÉ ƒë√£ b·ªã x√≥a ho·∫∑c kh√¥ng
                        t·ªìn t·∫°i.
                    </p>
                </div>
            );
        }

        return <Notes content={data.content} />;
    } catch (error) {
        return (
            <div className="flex flex-col items-center justify-center h-96 text-center">
                <AlertCircle className="w-12 h-12 text-yellow-500 mb-4" />
                <h2 className="text-2xl font-semibold mb-2">C√≥ l·ªói x·∫£y ra</h2>
                <p className="text-gray-600">Vui l√≤ng th·ª≠ l·∫°i sau.</p>
            </div>
        );
    }
}
