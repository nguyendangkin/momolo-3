

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    ports:
      - "${BACKEND_PORT}:8080"
    depends_on:
      db:
        condition: service_healthy      
    env_file:
      - ./backend/.env.production

  db:
    image: postgres:16.9
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}           
      POSTGRES_PASSWORD: ${DB_PASSWORD}   
      POSTGRES_DB: ${DB_DATABASE}         
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME}']
      interval: 10s
      timeout: 5s
      retries: 5
  nginx:
    image: nginx:1.27.5-alpine
    profiles: ["production"]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
  certbot:
    image: certbot/certbot:v4.0.0
    profiles: ["production"]
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: ""
    command:
      - certbot
      - certonly
      - --webroot
      - --webroot-path=/var/www/certbot
      - --email
      - nguyenchin0077@gmail.com
      - --agree-tos
      - --no-eff-email
      - --non-interactive
      - -d
      - momolo.io.vn
      - -d
      - www.momolo.io.vn
    depends_on:
      - nginx

volumes:
  postgres_data:
