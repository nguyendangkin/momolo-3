# http redirect
server {
    listen 80;
    server_name momolo.io.vn www.momolo.io.vn;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}


# HTTPS Server
server {
    listen 443 ssl;
    server_name momolo.io.vn www.momolo.io.vn;

    ssl_certificate /etc/letsencrypt/live/momolo.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/momolo.io.vn/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://frontend:3000;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_read_timeout 90;
    }
}


# REDIRECT HTTP -> HTTPS cho api.momolo.io.vn
server {
    listen 80;
    server_name api.momolo.io.vn;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}


# HTTPS cho backend (NestJS)
server {
    listen 443 ssl;
    server_name api.momolo.io.vn;

    ssl_certificate /etc/letsencrypt/live/momolo.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/momolo.io.vn/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}